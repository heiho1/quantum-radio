version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: quantum_radio
      POSTGRES_USER: quantum_user
      POSTGRES_PASSWORD: quantum_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U quantum_user -d quantum_radio"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - quantum-network

  # Node.js API Backend
  quantum-radio-api:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=quantum_radio
      - DB_USER=quantum_user
      - DB_PASSWORD=quantum_password
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/users"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - quantum-network

  # Nginx Frontend
  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./public:/usr/share/nginx/html:ro
    depends_on:
      - quantum-radio-api
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - quantum-network

volumes:
  postgres_data:
    driver: local

networks:
  quantum-network:
    driver: bridge